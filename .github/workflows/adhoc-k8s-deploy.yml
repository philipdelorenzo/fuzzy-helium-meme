name: Deploy ECR Image to Kubernetes

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to Deploy to...'
        required: true
        type: choice
        options:
          - dev
env:
  ECR_REPO_NAME: helium
  K8S_PREREQS_PATH: k8s/prereqs
  K8S_BASE_PATH: k8s/base
  K8S_MANIFEST_PATH: k8s/overlays

permissions:
  id-token: write
  contents: read

jobs:
  kubernetes_image_deploy:
    if: (github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID}}:role/GitHubOIDCRole
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install Python Dependencies
      run: |
        pip install -r ${{ github.workspace }}/.github/workflows/src/requirements.txt
      shell: bash

    - name: Current Release Version
      if: github.event_name == 'workflow_dispatch'
      id: latest-version
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        #!/bin/bash
        echo "Getting latest release version"
        _version=$(python ${{ github.workspace }}/.github/workflows/src/project_versions.py --latest)
        echo "Latest Release Version: $_version"
        echo "latest_version=$_version" >> $GITHUB_OUTPUT
      shell: bash

    # Install kubectl (needed for the kustomize command)
    - name: Set up kubectl and Kustomize
      uses: azure/setup-kubectl@v3
      with:
        # kubectl comes bundled with kustomize
        version: 'v1.27.0' 
    
    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --name ${{ secrets.TF_VAR_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

    - name: Update deployment manifest image
      run: |
        sed -i "s|helium:latest|${{ steps.login-ecr.outputs.registry }}:${{ steps.latest-version.outputs.latest_version }}|g" ${{ github.workspace }}/${{ env.K8S_BASE_PATH }}/deployment.yaml
        cat ${{ github.workspace }}/${{ env.K8S_MANIFEST_PATH }} # Optional: view the updated manifest

    # 4. Deploy using Kustomize
    - name: Deploy to Kubernetes
      run: |
        # Ensure namespace exists
        kubectl apply -f ${{ github.workspace }}/${{ env.K8S_PREREQS_PATH }}/namespace.yaml
        # The 'kustomize build' command generates the final YAML, 
        # which is piped to 'kubectl apply -f -'
        kubectl apply -k ${{ github.workspace }}/${{ env.K8S_MANIFEST_PATH }}
        
        # Optional: Check rollout status
        kubectl rollout status deployment/helium -n helium
      shell: bash
