apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: helium
  name: helium
  namespace: helium  # Sets Namespace
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: helium
  template:
    metadata:
      labels:
        app.kubernetes.io/name: helium
    spec:
      containers:
        - name: helium
          image: helium:latest
          imagePullPolicy: IfNotPresent  # IfNotPresent, The image is pre-loaded using 'kind load docker-image'
          # Enironment Vars from Secrets examples
          env:
            - name: APP_NAME
              valueFrom:
                configMapKeyRef:
                  name: helium
                  key: APP_NAME
            - name: IMAGE_NAME
              valueFrom:
                configMapKeyRef:
                  name: helium
                  key: IMAGE_NAME
            - name: IMAGE_TAG
              valueFrom:
                configMapKeyRef:
                  name: helium
                  key: IMAGE_TAG
            - name: REGION
              valueFrom:
                configMapKeyRef:
                  name: helium
                  key: REGION

            # Postgres
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: auroradb
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: auroradb
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auroradb
                  key: DB_PASSWORD

          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
